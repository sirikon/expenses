#!/usr/bin/env python3
from os import makedirs, getcwd, path


def cli():
    def abs(p): return os.path.join(os.getcwd(), p)
    DENO_CONF_FLAGS = [
        '--import-map', abs('back/import_map.json'),
        '--lock', abs('back/lock.json'),
    ]
    DENO_PERM_FLAGS = ['-A']
    DENO_EXEC_FLAGS = ['--unstable', '--cached-only']
    DENO_ENTRY_FILE = abs('back/src/main.ts')

    @command
    def front_install():
        cmd('npm', 'install', cwd='front')

    @command
    def front_start():
        cmd('npm', 'start', cwd='front')

    @command
    def back_install():
        cmd('deno', 'cache',
            *DENO_CONF_FLAGS, '--reload',
            DENO_ENTRY_FILE)

    @command
    def back_lock():
        cmd('deno', 'cache',
            *DENO_CONF_FLAGS, '--lock-write',
            DENO_ENTRY_FILE)

    @command
    def back_start():
        makedirs('testing-folder', exist_ok=True)
        cmd('deno', 'run',
            *DENO_CONF_FLAGS,
            *DENO_PERM_FLAGS,
            *DENO_EXEC_FLAGS,
            DENO_ENTRY_FILE, cwd='testing-folder')

    @command
    def back_format():
        cmd('deno', 'fmt', cwd='back')

    @command
    def back_lint():
        cmd('deno', 'lint', cwd='back')

    @command
    def build():
        cmd('rm', '-rf', getcwd() + '/build')
        makedirs('build', exist_ok=True)

        front_install()
        cmd('npm', 'run', '-s', 'release', cwd='front')
        cmd('mv', getcwd() + '/front/dist', getcwd() +
            '/build/front-static')

        back_lint()
        cmd('deno', 'compile',
            *DENO_CONF_FLAGS,
            *DENO_PERM_FLAGS,
            *DENO_EXEC_FLAGS,
            '--output', 'build/expenses',
            DENO_ENTRY_FILE)

    @command
    def install():
        install_dir = '/opt/expenses'
        cmd('rm', '-rf', install_dir)
        cmd('cp', '-r', path.join(getcwd(), 'build'), install_dir)

        cmd('rm', '-f', '/usr/local/bin/expenses')
        with open('/usr/local/bin/expenses', 'w') as file:
            file.write('\n'.join([
                '#!/usr/bin/env bash',
                'set -euo pipefail',
                f'export FRONT_STATIC_ASSETS={install_dir}/front-static',
                f'{install_dir}/expenses',
                ''
            ]))
        cmd('chmod', '+x', '/usr/local/bin/expenses')





# fmt: off
# https://gist.github.com/sirikon/d4327b6cc3de5cc244dbe5529d8f53ae
import inspect, sys, os, subprocess; os.chdir(os.path.dirname(__file__));commands = []
def cmd(*args, **kwargs): subprocess.run(args, **kwargs, check=True)
def spec(f): return inspect.getfullargspec(f)
def command(func): commands.append(func); return func
cli(); args = sys.argv[1:]
if len(args) == 0: print("Available commands:"); [print(' '.join([
    f' {f.__name__}',
    *[f'<{a}>' for a in spec(f).args],
    *([f'<...{spec(f).varargs}>'] if spec(f).varargs is not None else [])
])) for f in commands]; exit(0)
matching_commands = [f for f in commands if f.__name__ == args[0]]
if len(matching_commands) == 0: print(f'Unknown command "{args[0]}"');sys.exit(1)
try: matching_commands[0](*args[1:])
except KeyboardInterrupt: pass
except subprocess.CalledProcessError as err: sys.exit(err.returncode)
