#!/usr/bin/env python3
from os import path, makedirs, getcwd
from subprocess import run

def cli():

    @command
    def start_front():
        run(['npm', 'start'], cwd='front')

    @command
    def start_back(*args):
        makedirs('testing-folder', exist_ok=True)
        run(['deno', 'run', *deno_flags(), *args], cwd='testing-folder')

    @command
    def build():
        makedirs('bin', exist_ok=True)
        run(['deno', 'compile', *deno_flags('--output', 'bin/expenses')])

    @command
    def install():
        run(['cp', './bin/expenses', '/usr/local/bin/expenses'])

    def deno_flags(*args):
        return [
            '--unstable', '--allow-all',
            '--import-map', path.join(getcwd(), 'back', 'import_map.json'),
            *args,
            path.join(getcwd(), 'back', 'src', 'main.ts')
        ]




import inspect, sys, os; os.chdir(os.path.dirname(__file__)); commands = []
def spec(f): return inspect.getfullargspec(f)
def command(func): commands.append(func); return func
cli(); args = sys.argv[1:]
if len(args) == 0: print("Available commands:"); [print(' '.join([
    f' {f.__name__}',
    *[f'<{a}>' for a in spec(f).args],
    *([f'<...{spec(f).varargs}>'] if spec(f).varargs is not None else [])
])) for f in commands]; exit(0)
matching_commands = [f for f in commands if f.__name__ == args[0]]
if len(matching_commands) == 0: print(f'Unknown command "{args[0]}"'); exit(1)
try: matching_commands[0](*args[1:])
except KeyboardInterrupt: pass
